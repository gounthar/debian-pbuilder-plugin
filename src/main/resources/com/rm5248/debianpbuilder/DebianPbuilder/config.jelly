<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
    <f:entry title="Number of cores" field="numberCores">
        <f:textbox default="1"/>
    </f:entry>
    <f:entry title="Distribution" field="distribution">
        <f:textbox/>
    </f:entry>
    <f:entry title="Mirror Site" field="mirrorSite">
        <f:textbox/>
    </f:entry>

    <f:advanced>
        <f:entry title="Build as tag" field="buildAsTag">
            <f:checkbox/>
        </f:entry>
        <f:entry title="Additional Build Results" field="additionalBuildResults">
            <f:textbox/>
        </f:entry>
        <f:entry title="Architecture" field="architecture">
            <f:textbox/>
        </f:entry>
        <f:entry title="Location of debian/ folder" field="debianDirLocation">
            <f:textbox default="${descriptor.defaultDebDirLocation()}"/>
        </f:entry>
        <f:entry title="Keyring to build with" field="keyring">
            <f:textbox default="${descriptor.getKeyring()}"/>
        </f:entry>
        <f:entry title="Components for apt" field="components">
            <f:textbox/>
        </f:entry>
        <f:entry title="Guess components" field="guessComponents">
            <f:checkbox default="checked"/>
        </f:entry>
        <f:entry title="Pristine tar file name" field="pristineTarName">
            <f:textbox />
        </f:entry>
        <f:entry title="Other mirror" field="otherMirror">
            <f:textbox/>
        </f:entry>
        <f:entry title="Extra Packages" field="extraPackages">
            <f:textbox/>
        </f:entry>
        <f:entry title="Generate Artifactory spec file" field="generateArtifactorySpecFile">
            <f:checkbox/>
        </f:entry>
        <f:entry title="Artifactory repo name" field="artifactoryRepoName">
            <f:textbox/>
        </f:entry>
        <f:entry title="PBuilder implementation" field="pbuilderType">
            <select name="pbuilderType">
                <option value="Cowbuilder" selected="${instance.pbuilderType.equals('Cowbuilder')? 'true':'false'}">Cowbuilder</option>
                <option value="PBuilder" selected="${instance.pbuilderType.equals('PBuilder')? 'true':'false'}">PBuilder</option>
            </select>
        </f:entry>
    </f:advanced>
</j:jelly>
